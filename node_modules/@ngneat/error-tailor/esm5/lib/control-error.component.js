import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, TemplateRef } from '@angular/core';
var DefaultControlErrorComponent = /** @class */ (function () {
    function DefaultControlErrorComponent(cdr, host) {
        this.cdr = cdr;
        this.host = host;
        this.errorText = null;
        this.hideError = true;
    }
    DefaultControlErrorComponent.prototype.createTemplate = function (tpl, error, text) {
        this.errorTemplate = tpl;
        this.errorContext = { $implicit: error, text: text };
        this.cdr.markForCheck();
    };
    Object.defineProperty(DefaultControlErrorComponent.prototype, "customClass", {
        set: function (className) {
            this.host.nativeElement.classList.add(className);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefaultControlErrorComponent.prototype, "text", {
        set: function (value) {
            if (value !== this.errorText) {
                this.errorText = value;
                this.hideError = !value;
                this.cdr.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    DefaultControlErrorComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef }
    ]; };
    DefaultControlErrorComponent = __decorate([
        Component({
            selector: 'control-error',
            template: "\n    <label class=\"control-error\" [class.hide-control]=\"hideError\" *ngIf=\"!errorTemplate\">{{ errorText }}</label>\n    <ng-template *ngTemplateOutlet=\"errorTemplate; context: errorContext\"></ng-template>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["\n      .hide-control {\n        display: none !important;\n      }\n\n      :host {\n        display: block;\n      }\n    "]
        })
    ], DefaultControlErrorComponent);
    return DefaultControlErrorComponent;
}());
export { DefaultControlErrorComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC1lcnJvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmduZWF0L2Vycm9yLXRhaWxvci8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sLWVycm9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBOEIvRztJQXdCRSxzQ0FBb0IsR0FBc0IsRUFBVSxJQUE2QjtRQUE3RCxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUFVLFNBQUksR0FBSixJQUFJLENBQXlCO1FBdkJqRixjQUFTLEdBQWtCLElBQUksQ0FBQztRQUdoQyxjQUFTLEdBQUcsSUFBSSxDQUFDO0lBb0JtRSxDQUFDO0lBbEJyRixxREFBYyxHQUFkLFVBQWUsR0FBMkIsRUFBRSxLQUF1QixFQUFFLElBQVk7UUFDL0UsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxNQUFBLEVBQUUsQ0FBQztRQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxzQkFBSSxxREFBVzthQUFmLFVBQWdCLFNBQWlCO1lBQy9CLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbkQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw4Q0FBSTthQUFSLFVBQVMsS0FBb0I7WUFDM0IsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDNUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7YUFDekI7UUFDSCxDQUFDOzs7T0FBQTs7Z0JBRXdCLGlCQUFpQjtnQkFBZ0IsVUFBVTs7SUF4QnpELDRCQUE0QjtRQW5CeEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsUUFBUSxFQUFFLDBOQUdUO1lBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07cUJBRTdDLDhIQVFDO1NBRUosQ0FBQztPQUNXLDRCQUE0QixDQXlCeEM7SUFBRCxtQ0FBQztDQUFBLEFBekJELElBeUJDO1NBekJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmFsaWRhdGlvbkVycm9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuZXhwb3J0IHR5cGUgRXJyb3JDb21wb25lbnRUZW1wbGF0ZSA9IFRlbXBsYXRlUmVmPHsgJGltcGxpY2l0OiBWYWxpZGF0aW9uRXJyb3JzOyB0ZXh0OiBzdHJpbmcgfT47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29udHJvbEVycm9yQ29tcG9uZW50IHtcbiAgY3VzdG9tQ2xhc3M6IHN0cmluZztcbiAgdGV4dDogc3RyaW5nIHwgbnVsbDtcbiAgY3JlYXRlVGVtcGxhdGU/KHRwbDogRXJyb3JDb21wb25lbnRUZW1wbGF0ZSwgZXJyb3I6IFZhbGlkYXRpb25FcnJvcnMsIHRleHQ6IHN0cmluZyk6IHZvaWQ7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbnRyb2wtZXJyb3InLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxsYWJlbCBjbGFzcz1cImNvbnRyb2wtZXJyb3JcIiBbY2xhc3MuaGlkZS1jb250cm9sXT1cImhpZGVFcnJvclwiICpuZ0lmPVwiIWVycm9yVGVtcGxhdGVcIj57eyBlcnJvclRleHQgfX08L2xhYmVsPlxuICAgIDxuZy10ZW1wbGF0ZSAqbmdUZW1wbGF0ZU91dGxldD1cImVycm9yVGVtcGxhdGU7IGNvbnRleHQ6IGVycm9yQ29udGV4dFwiPjwvbmctdGVtcGxhdGU+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgICAuaGlkZS1jb250cm9sIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgfVxuXG4gICAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIGBcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29udHJvbEVycm9yQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbEVycm9yQ29tcG9uZW50IHtcbiAgZXJyb3JUZXh0OiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgZXJyb3JUZW1wbGF0ZTogRXJyb3JDb21wb25lbnRUZW1wbGF0ZSB8IHVuZGVmaW5lZDtcbiAgZXJyb3JDb250ZXh0OiB7ICRpbXBsaWNpdDogVmFsaWRhdGlvbkVycm9yczsgdGV4dDogc3RyaW5nIH07XG4gIGhpZGVFcnJvciA9IHRydWU7XG5cbiAgY3JlYXRlVGVtcGxhdGUodHBsOiBFcnJvckNvbXBvbmVudFRlbXBsYXRlLCBlcnJvcjogVmFsaWRhdGlvbkVycm9ycywgdGV4dDogc3RyaW5nKSB7XG4gICAgdGhpcy5lcnJvclRlbXBsYXRlID0gdHBsO1xuICAgIHRoaXMuZXJyb3JDb250ZXh0ID0geyAkaW1wbGljaXQ6IGVycm9yLCB0ZXh0IH07XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICBzZXQgY3VzdG9tQ2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpIHtcbiAgICB0aGlzLmhvc3QubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gIH1cblxuICBzZXQgdGV4dCh2YWx1ZTogc3RyaW5nIHwgbnVsbCkge1xuICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5lcnJvclRleHQpIHtcbiAgICAgIHRoaXMuZXJyb3JUZXh0ID0gdmFsdWU7XG4gICAgICB0aGlzLmhpZGVFcnJvciA9ICF2YWx1ZTtcbiAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgcHJpdmF0ZSBob3N0OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pikge31cbn1cbiJdfQ==