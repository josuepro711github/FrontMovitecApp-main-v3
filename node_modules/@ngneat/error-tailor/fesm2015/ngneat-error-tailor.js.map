{"version":3,"file":"ngneat-error-tailor.js","sources":["ng://@ngneat/error-tailor/lib/control-error.component.ts","ng://@ngneat/error-tailor/lib/control-error-anchor.directive.ts","ng://@ngneat/error-tailor/lib/providers.ts","ng://@ngneat/error-tailor/lib/form-action.directive.ts","ng://@ngneat/error-tailor/lib/control-error.directive.ts","ng://@ngneat/error-tailor/lib/error-tailor.module.ts","ng://@ngneat/error-tailor/public-api.ts","ng://@ngneat/error-tailor/ngneat-error-tailor.ts"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, TemplateRef } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\nexport type ErrorComponentTemplate = TemplateRef<{ $implicit: ValidationErrors; text: string }>;\n\nexport interface ControlErrorComponent {\n  customClass: string;\n  text: string | null;\n  createTemplate?(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string): void;\n}\n\n@Component({\n  selector: 'control-error',\n  template: `\n    <label class=\"control-error\" [class.hide-control]=\"hideError\" *ngIf=\"!errorTemplate\">{{ errorText }}</label>\n    <ng-template *ngTemplateOutlet=\"errorTemplate; context: errorContext\"></ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      .hide-control {\n        display: none !important;\n      }\n\n      :host {\n        display: block;\n      }\n    `\n  ]\n})\nexport class DefaultControlErrorComponent implements ControlErrorComponent {\n  errorText: string | null = null;\n  errorTemplate: ErrorComponentTemplate | undefined;\n  errorContext: { $implicit: ValidationErrors; text: string };\n  hideError = true;\n\n  createTemplate(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string) {\n    this.errorTemplate = tpl;\n    this.errorContext = { $implicit: error, text };\n    this.cdr.markForCheck();\n  }\n\n  set customClass(className: string) {\n    this.host.nativeElement.classList.add(className);\n  }\n\n  set text(value: string | null) {\n    if (value !== this.errorText) {\n      this.errorText = value;\n      this.hideError = !value;\n      this.cdr.markForCheck();\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private host: ElementRef<HTMLElement>) {}\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[controlErrorAnchor]',\n  exportAs: 'controlErrorAnchor'\n})\nexport class ControlErrorAnchorDirective {\n  constructor(public vcr: ViewContainerRef) {}\n}\n","import { InjectionToken, ValueSansProvider, FactorySansProvider, Type } from '@angular/core';\nimport { ErrorsMap } from './types';\nimport { ControlErrorComponent } from './control-error.component';\n\nexport const FORM_ERRORS = new InjectionToken('FORM_ERRORS', {\n  providedIn: 'root',\n  factory: () => {\n    return {};\n  }\n});\n\nexport interface ErrorsUseValue extends ValueSansProvider {\n  useValue: ErrorsMap;\n}\n\nexport interface ErrorsUseFactory extends FactorySansProvider {\n  useFactory: (...args: any[]) => ErrorsMap;\n}\n\nexport type ErrorsProvider = ErrorsUseValue | ErrorsUseFactory;\n\nexport type ErrorTailorConfig = {\n  errors?: ErrorsProvider;\n  blurPredicate?: (element: Element) => boolean;\n  controlErrorComponent?: Type<ControlErrorComponent>;\n  controlErrorComponentAnchorFn?: (hostElement: Element, errorElement: Element) => () => void;\n};\n\nexport const ErrorTailorConfigProvider = new InjectionToken<ErrorTailorConfig>('ErrorTailorConfigProvider');\n","import { Directive, ElementRef } from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n@Directive({\n  selector: 'form[errorTailor]'\n})\nexport class FormActionDirective {\n  submit$: Observable<Event> = fromEvent(this.element, 'submit').pipe(\n    tap(() => {\n      if (this.element.classList.contains('form-submitted') === false) {\n        this.element.classList.add('form-submitted');\n      }\n    }),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  reset$: Observable<Event> = fromEvent(this.element, 'reset').pipe(\n    tap(() => {\n      this.element.classList.remove('form-submitted');\n    }),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  constructor(private host: ElementRef<HTMLFormElement>) {}\n\n  get element() {\n    return this.host.nativeElement;\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n  TemplateRef,\n  ViewContainerRef,\n  EmbeddedViewRef\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, NgControl, ValidationErrors } from '@angular/forms';\nimport { DefaultControlErrorComponent, ControlErrorComponent } from './control-error.component';\nimport { ControlErrorAnchorDirective } from './control-error-anchor.directive';\nimport { EMPTY, fromEvent, merge, NEVER, Observable, Subject } from 'rxjs';\nimport { ErrorTailorConfig, ErrorTailorConfigProvider, FORM_ERRORS } from './providers';\nimport { distinctUntilChanged, mapTo, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { FormActionDirective } from './form-action.directive';\nimport { ErrorsMap } from './types';\n\n@Directive({\n  selector:\n    '[formControlName]:not([controlErrorsIgnore]), [formControl]:not([controlErrorsIgnore]), [formGroup]:not([controlErrorsIgnore]), [formGroupName]:not([controlErrorsIgnore]), [formArrayName]:not([controlErrorsIgnore]), [ngModel]:not([controlErrorsIgnore])'\n})\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\n  @Input('controlErrors') customErrors: ErrorsMap = {};\n  @Input() controlErrorsClass: string | undefined;\n  @Input() controlErrorsTpl: TemplateRef<any> | undefined;\n  @Input() controlErrorsOnAsync = true;\n  @Input() controlErrorsOnBlur = true;\n  @Input() controlErrorAnchor: ControlErrorAnchorDirective;\n\n  private ref: ComponentRef<ControlErrorComponent>;\n  private anchor: ViewContainerRef;\n  private submit$: Observable<Event>;\n  private reset$: Observable<Event>;\n  private control: AbstractControl;\n  private destroy = new Subject();\n  private mergedConfig: ErrorTailorConfig = {};\n  private customAnchorDestroyFn: () => void;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n    private host: ElementRef,\n    @Inject(ErrorTailorConfigProvider) private config: ErrorTailorConfig,\n    @Inject(FORM_ERRORS) private globalErrors,\n    @Optional() private controlErrorAnchorParent: ControlErrorAnchorDirective,\n    @Optional() private form: FormActionDirective,\n    @Optional() @Self() private ngControl: NgControl,\n    @Optional() @Self() private controlContainer: ControlContainer\n  ) {\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\n    this.reset$ = this.form ? this.form.reset$ : EMPTY;\n    this.mergedConfig = this.buildConfig();\n  }\n\n  ngOnInit() {\n    this.anchor = this.resolveAnchor();\n    this.control = (this.controlContainer || this.ngControl).control;\n    const hasAsyncValidator = !!this.control.asyncValidator;\n    const isInput = this.mergedConfig.blurPredicate(this.host.nativeElement);\n\n    const statusChanges$ = this.control.statusChanges.pipe(distinctUntilChanged());\n    const valueChanges$ = this.control.valueChanges;\n    const controlChanges$ = merge(statusChanges$, valueChanges$);\n    let changesOnAsync$: Observable<any> = EMPTY;\n    let changesOnBlur$: Observable<any> = EMPTY;\n\n    if (this.controlErrorsOnAsync && hasAsyncValidator) {\n      // hasAsyncThenUponStatusChange\n      changesOnAsync$ = statusChanges$.pipe(startWith(true));\n    }\n\n    if (this.controlErrorsOnBlur && isInput) {\n      const blur$ = fromEvent(this.host.nativeElement, 'focusout');\n      // blurFirstThenUponChange\n      changesOnBlur$ = blur$.pipe(switchMap(() => valueChanges$.pipe(startWith(true))));\n    }\n\n    const submit$ = merge(this.submit$.pipe(mapTo(true)), this.reset$.pipe(mapTo(false)));\n\n    // when submitted, submitFirstThenUponChanges\n    const changesOnSubmit$ = submit$.pipe(\n      switchMap(submit => (submit ? controlChanges$.pipe(startWith(true)) : NEVER))\n    );\n\n    // on reset, clear ComponentRef and customAnchorDestroyFn\n    this.reset$.pipe(takeUntil(this.destroy)).subscribe(() => this.clearRefs());\n\n    merge(changesOnAsync$, changesOnBlur$, changesOnSubmit$)\n      .pipe(takeUntil(this.destroy))\n      .subscribe(() => this.valueChanges());\n  }\n\n  private setError(text: string, error?: ValidationErrors) {\n    if (!this.ref) {\n      const factory = this.resolver.resolveComponentFactory<ControlErrorComponent>(\n        this.mergedConfig.controlErrorComponent\n      );\n      this.ref = this.anchor.createComponent<ControlErrorComponent>(factory);\n    }\n    const instance = this.ref.instance;\n\n    if (this.controlErrorsTpl) {\n      instance.createTemplate(this.controlErrorsTpl, error, text);\n    } else {\n      instance.text = text;\n    }\n\n    if (this.controlErrorsClass) {\n      instance.customClass = this.controlErrorsClass;\n    }\n\n    if (this.mergedConfig.controlErrorComponentAnchorFn) {\n      this.customAnchorDestroyFn = this.mergedConfig.controlErrorComponentAnchorFn(\n        this.host.nativeElement as HTMLElement,\n        (this.ref.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy.next();\n    this.clearRefs();\n  }\n\n  private clearRefs(): void {\n    if (this.customAnchorDestroyFn) {\n      this.customAnchorDestroyFn();\n      this.customAnchorDestroyFn = null;\n    }\n    if (this.ref) {\n      this.ref.destroy();\n    }\n    this.ref = null;\n  }\n\n  private valueChanges() {\n    const controlErrors = this.control.errors;\n    if (controlErrors) {\n      const [firstKey] = Object.keys(controlErrors);\n      const getError = this.customErrors[firstKey] || this.globalErrors[firstKey];\n      if (!getError) {\n        return;\n      }\n\n      const text = typeof getError === 'function' ? getError(controlErrors[firstKey]) : getError;\n      this.setError(text, controlErrors);\n    } else if (this.ref) {\n      this.setError(null);\n    }\n  }\n\n  private resolveAnchor() {\n    if (this.controlErrorAnchor) {\n      return this.controlErrorAnchor.vcr;\n    }\n\n    if (this.controlErrorAnchorParent) {\n      return this.controlErrorAnchorParent.vcr;\n    }\n    return this.vcr;\n  }\n\n  private buildConfig(): ErrorTailorConfig {\n    return {\n      ...{\n        blurPredicate(element) {\n          return element.tagName === 'INPUT' || element.tagName === 'SELECT';\n        },\n        controlErrorComponent: DefaultControlErrorComponent\n      },\n      ...this.config\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ControlErrorsDirective } from './control-error.directive';\nimport { ControlErrorAnchorDirective } from './control-error-anchor.directive';\nimport { DefaultControlErrorComponent } from './control-error.component';\nimport { CommonModule } from '@angular/common';\nimport { FormActionDirective } from './form-action.directive';\nimport { ErrorTailorConfig, ErrorTailorConfigProvider, FORM_ERRORS } from './providers';\n\nconst api = [DefaultControlErrorComponent, ControlErrorAnchorDirective, ControlErrorsDirective, FormActionDirective];\n\n@NgModule({\n  declarations: [\n    ControlErrorsDirective,\n    ControlErrorAnchorDirective,\n    DefaultControlErrorComponent,\n    FormActionDirective\n  ],\n  imports: [CommonModule],\n  exports: [api],\n  entryComponents: [DefaultControlErrorComponent]\n})\nexport class ErrorTailorModule {\n  static forRoot(config: ErrorTailorConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ErrorTailorModule,\n      providers: [\n        {\n          provide: ErrorTailorConfigProvider,\n          useValue: config\n        },\n        {\n          provide: FORM_ERRORS,\n          ...config.errors\n        } as any\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of error-tailor\n */\n\nexport * from './lib/error-tailor.module';\nexport * from './lib/control-error.component';\nexport * from './lib/control-error-anchor.directive';\nexport * from './lib/control-error.directive';\nexport * from './lib/form-action.directive';\nexport * from './lib/providers';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}