import { InjectionToken, ValueSansProvider, FactorySansProvider, Type } from '@angular/core';
import { ErrorsMap } from './types';
import { ControlErrorComponent } from './control-error.component';
export declare const FORM_ERRORS: InjectionToken<{}>;
export interface ErrorsUseValue extends ValueSansProvider {
    useValue: ErrorsMap;
}
export interface ErrorsUseFactory extends FactorySansProvider {
    useFactory: (...args: any[]) => ErrorsMap;
}
export declare type ErrorsProvider = ErrorsUseValue | ErrorsUseFactory;
export declare type ErrorTailorConfig = {
    errors?: ErrorsProvider;
    blurPredicate?: (element: Element) => boolean;
    controlErrorComponent?: Type<ControlErrorComponent>;
    controlErrorComponentAnchorFn?: (hostElement: Element, errorElement: Element) => () => void;
};
export declare const ErrorTailorConfigProvider: InjectionToken<ErrorTailorConfig>;
