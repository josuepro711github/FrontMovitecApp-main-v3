import { ChangeDetectorRef, ElementRef, TemplateRef } from '@angular/core';
import { ValidationErrors } from '@angular/forms';
export declare type ErrorComponentTemplate = TemplateRef<{
    $implicit: ValidationErrors;
    text: string;
}>;
export interface ControlErrorComponent {
    customClass: string;
    text: string | null;
    createTemplate?(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string): void;
}
export declare class DefaultControlErrorComponent implements ControlErrorComponent {
    private cdr;
    private host;
    errorText: string | null;
    errorTemplate: ErrorComponentTemplate | undefined;
    errorContext: {
        $implicit: ValidationErrors;
        text: string;
    };
    hideError: boolean;
    createTemplate(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string): void;
    set customClass(className: string);
    set text(value: string | null);
    constructor(cdr: ChangeDetectorRef, host: ElementRef<HTMLElement>);
}
